OmEntry {	#tags : {		#prior : OmReference [ '0' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jumble,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\t| wordlistUrl words wordList |\r\twordlistUrl := \'https://raw.githubusercontent.com/dwyl/english-words/master/words_alpha.txt\'.\r\twords := (ZnUrl fromString: wordlistUrl) retrieveContents.\r\twordList := Character cr asString , Character lf asString split:\r\t\t            words.\r\twordDict := Dictionary new.\r\twordList do: [ :word | \r\t\t| key |\r\t\tkey := word sorted.\r\t\twordDict\r\t\t\tat: key\r\t\t\tifPresent: [ :v | v addLast: word ]\r\t\t\tifAbsentPut: [ { word } asOrderedCollection ] ]',			#stamp : 'GlamorousAuthor 1/21/2022 10:51',			#package : #Tutorial-Jumble		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jumble,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\t| wordlistUrl words wordList |\r\twordlistUrl := \'https://raw.githubusercontent.com/dwyl/english-words/master/words_alpha.txt\'.\r\twords := (ZnUrl fromString: wordlistUrl) retrieveContents.\r\twordList := Character cr asString , Character lf asString split:\r\t\t            words.\r\twordDict := Dictionary new.\r\twordList do: [ :word | \r\t\t| key |\r\t\tkey := word sorted.\r\t\twordDict\r\t\t\tat: key\r\t\t\tifPresent: [ :v | v addLast: word ]\r\t\t\tifAbsentPut: [ { word } asOrderedCollection ] ]',			#stamp : 'GlamorousAuthor 1/21/2022 10:51',			#package : #Tutorial-Jumble		}	}}